library(meRcury)
GetGDELT()
FolderForResults <- choose.dir(caption = "Select where to store GDELT Results")
fwrite(GDELTData, file = paste(FolderForResults, "/Date", dates, ".csv"))
#This code grabs the Global Knowledge Graph data for the dates specified by the DatesForGDELT() function
GDELTData <-
get_data_gkg_days_detailed(
dates = DatesForGDELT(daysBack = DaysBack),
#dates = c("2018-09-08"),
table_name = 'gkg',
return_message = T
)
ates = DatesForGDELT(daysBack = DaysBack)
dates = DatesForGDELT(daysBack = DaysBack)
dates = DatesForGDELT(daysBack = 1)
fwrite(GDELTData, file = paste(FolderForResults, "/Date", dates, ".csv"))
fwrite(GDELTData, file = paste(FolderForResults, "/Date", dates, ".csv", sep = ""))
library(meRcury)
gc()
#Look for Themes:####
#Grab the GDELT Codebook
GDELT_Codebook <- get_gdelt_codebook_ft_api(code_book = "gkg")
save.image("~/Mercury/meRcury/data/GDELT_Codebook.RData")
library(meRcury)
GetGDELT()
?gsub
dates = DatesForGDELT(daysBack = DaysBack)
dates = DatesForGDELT(daysBack = 1)
dates <- gsub("-", "_", dates)
dates = DatesForGDELT(daysBack = 1)
fwrite(GDELTData, file = paste(FolderForResults, "/GDELTDataDate", dates, ".csv", sep = ""))
FolderForResults <- choose.dir(caption = "Select where to store GDELT Results")
fwrite(GDELTData, file = paste(FolderForResults, "/GDELTDataDate", dates, ".csv", sep = ""))
?fwrite
write.csv(GDELTData, file = paste(FolderForResults, "/GDELTData2Date", dates, ".csv", sep = ""))
fwrite(GDELTData, file = paste(FolderForResults, "/GDELTDataDate2", dates, ".txt", sep = ""), sep = "|")
x <- fread("C:/Users/hwalbert001/Desktop/GDELTDataDate2018-09-27.csv")
ExtractEGYPT()
ExtractEGYPT(GDELTData = GDELTData)
library(meRcury)
library(meRcury)
meRcury::GetGDELT()
2+2
library(meRcury)
GetGDELT(SpecificDates = "2018-07-01")
DatesForGDELT(1)
DatesForGDELT(2)
ExtractEGYPT(GDELTData = GDELTData)
rm(gdelt_detailed_logs, dates, EgyptData)
#
#
ExtractEGYPT <- function(GDELTData, writeResults = T){
#Look for Organizations:####
cat("Finding Egypt Specific Organizations... \n")
EgyptOrganizations <- c("muslim brotherhood", "egyptian police", "egyptian military", "egyptian army", "egyptian", "Harakat Sawa'd Misr", "Harakat Sawad Misr", "HASM", "ISIS-Sinai", "ISIS Sinai", "Liwa al-Thawra")
AllOrganizations <- data.frame()
for (i in EgyptOrganizations){
Result <- filter(GDELTData, grepl(tolower(i), tolower(organizations)))
AllOrganizations <- rbind(Result, AllOrganizations)
}
AllOrganizations <- unique(AllOrganizations)
#Look for Themes:####
#Grab the GDELT Codebook
#GDELT_Codebook <- get_gdelt_codebook_ft_api(code_book = "gkg")
#Look at some of the Egypt themes in the GDELT Codebook:
cat("Finding Egypt Specific Themes... \n")
EgyptThemes <- c(grep("EGYPT", GDELT_Codebook$idGKGTheme, value = T))
AllThemes <- data.frame()
for (i in EgyptThemes){
Result <- filter(GDELTData, grepl(tolower(i), tolower(themes)))
AllThemes <- rbind(Result, AllThemes)
}
AllThemes <- unique(AllThemes)
cat("Finding Egypt Specific Domain Names... \n")
AllDomains <- data.frame()
EgyptDomains <- c("almasryalyoum.com", "ahram.org.eg", "alwafd.org", "youm7.com", "egyptindependent.com", "dailynewsegypt.com")
for (i in EgyptDomains){
Result <- filter(GDELTData, grepl(tolower(i), tolower(domainSource)))
AllDomains <- rbind(Result, AllDomains)
}
AllDomains <- unique(AllDomains)
AllData <- rbind(AllOrganizations, AllThemes, AllDomains)
AllData <- unique(AllData)
EgyptData <<- AllData
if(writeResults==T){
FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
fwrite(EgyptData, file = paste(FolderForResults, "/EgyptDataDate", dates, ".csv", sep = ""))
}
}
ExtractEGYPT(GDELTData = GDELTData)
dates="070118"
ExtractEGYPT(GDELTData = GDELTData)
ExpandEgypt <- function(EgyptData){
AllData <- EgyptData
cat("Parsing Tone, Names, Locations, and Organizations... \n")
ToneData <- data.frame(t(data.frame(strsplit(AllData$tone, ","))))
names(ToneData) <- c("Tone","PositiveScore", "NegativeScore", "Polarity", "ActivityReferenceDensity", "Self_GroupReferenceDensity", "WordCount")
ToneData[] <- lapply(ToneData, as.character)
ToneData[] <- lapply(ToneData, as.numeric)
AllData <- cbind(AllData, ToneData)
#dates <- data.frame(parse_gkg_mentioned_dates(AllData))
locations <- data.frame(parse_gkg_mentioned_locations(AllData))
names <- data.frame(parse_gkg_mentioned_names(AllData))
organizations <- data.frame(parse_gkg_mentioned_organizations(AllData))
#people <- data.frame(parse_gkg_mentioned_people(AllData))
AllData <- left_join(AllData, locations, by = "idGKG")
AllData <- left_join(AllData, names, by = "idGKG")
AllData <- left_join(AllData, organizations, by = "idGKG")
EgyptData <<- AllData
if(writeResults==T){
FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
fwrite(EgyptData, file = paste(FolderForResults, "/EgyptExpandedDataDate", dates, ".csv", sep = ""))
}
}
ExpandEgypt <- function(EgyptData){
AllData <- EgyptData
cat("Parsing Tone, Names, Locations, and Organizations... \n")
ToneData <- data.frame(t(data.frame(strsplit(AllData$tone, ","))))
names(ToneData) <- c("Tone","PositiveScore", "NegativeScore", "Polarity", "ActivityReferenceDensity", "Self_GroupReferenceDensity", "WordCount")
ToneData[] <- lapply(ToneData, as.character)
ToneData[] <- lapply(ToneData, as.numeric)
AllData <- cbind(AllData, ToneData)
#dates <- data.frame(parse_gkg_mentioned_dates(AllData))
locations <- data.frame(parse_gkg_mentioned_locations(AllData))
names <- data.frame(parse_gkg_mentioned_names(AllData))
organizations <- data.frame(parse_gkg_mentioned_organizations(AllData))
#people <- data.frame(parse_gkg_mentioned_people(AllData))
AllData <- left_join(AllData, locations, by = "idGKG")
AllData <- left_join(AllData, names, by = "idGKG")
AllData <- left_join(AllData, organizations, by = "idGKG")
EgyptDataExpanded <<- AllData
if(writeResults==T){
FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
fwrite(EgyptData, file = paste(FolderForResults, "/EgyptExpandedDataDate", dates, ".csv", sep = ""))
}
}
ExpandEgypt(EgyptData = EgyptData)
ExpandEgypt <- function(EgyptData, writeResults = T){
AllData <- EgyptData
cat("Parsing Tone, Names, Locations, and Organizations... \n")
ToneData <- data.frame(t(data.frame(strsplit(AllData$tone, ","))))
names(ToneData) <- c("Tone","PositiveScore", "NegativeScore", "Polarity", "ActivityReferenceDensity", "Self_GroupReferenceDensity", "WordCount")
ToneData[] <- lapply(ToneData, as.character)
ToneData[] <- lapply(ToneData, as.numeric)
AllData <- cbind(AllData, ToneData)
#dates <- data.frame(parse_gkg_mentioned_dates(AllData))
locations <- data.frame(parse_gkg_mentioned_locations(AllData))
names <- data.frame(parse_gkg_mentioned_names(AllData))
organizations <- data.frame(parse_gkg_mentioned_organizations(AllData))
#people <- data.frame(parse_gkg_mentioned_people(AllData))
AllData <- left_join(AllData, locations, by = "idGKG")
AllData <- left_join(AllData, names, by = "idGKG")
AllData <- left_join(AllData, organizations, by = "idGKG")
EgyptDataExpanded <<- AllData
if(writeResults==T){
FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
fwrite(EgyptData, file = paste(FolderForResults, "/EgyptExpandedDataDate", dates, ".csv", sep = ""))
}
}
?parse_gkg_mentioned_locations
ExpandEgypt(EgyptData = EgyptData)
ExpandEgypt <- function(EgyptData, writeResults = T){
AllData <- EgyptData
cat("Parsing Tone, Names, Locations, and Organizations... \n")
ToneData <- data.frame(t(data.frame(strsplit(AllData$tone, ","))))
names(ToneData) <- c("Tone","PositiveScore", "NegativeScore", "Polarity", "ActivityReferenceDensity", "Self_GroupReferenceDensity", "WordCount")
ToneData[] <- lapply(ToneData, as.character)
ToneData[] <- lapply(ToneData, as.numeric)
AllData <- cbind(AllData, ToneData)
#dates <- data.frame(parse_gkg_mentioned_dates(AllData))
locations <- data.frame(parse_gkg_mentioned_locations(AllData))
names <- data.frame(parse_gkg_mentioned_names(AllData))
organizations <- data.frame(parse_gkg_mentioned_organizations(AllData))
#people <- data.frame(parse_gkg_mentioned_people(AllData))
AllData <- left_join(AllData, locations, by = "idGKG")
AllData <- left_join(AllData, names, by = "idGKG")
AllData <- left_join(AllData, organizations, by = "idGKG")
EgyptDataExpanded <<- AllData
if(writeResults==T){
FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
fwrite(EgyptDataExpanded, file = paste(FolderForResults, "/EgyptExpandedDataDate", dates, ".csv", sep = ""))
}
}
ExpandEgypt(EgyptData = EgyptData)
gc()
library(meRcury)
library(meRcury)
GetGDELT(SpecificDates = "2018-07-01")
ExtractEGYPT(GDELTData = GDELTData)
ExpandEgypt(EgyptData = EgyptData)
names(EgyptDataExpanded)
