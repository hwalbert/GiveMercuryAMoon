# USER INPUT
# set directory




ExpandEgypt <- function(EgyptData, writeResults = T){
  
  AllData <- EgyptData
  cat("Parsing Tone, Names, Locations, and Organizations... \n")
  
  ToneData <- data.frame(t(data.frame(strsplit(AllData$tone, ","))))
  names(ToneData) <- c("Tone","PositiveScore", "NegativeScore", "Polarity", "ActivityReferenceDensity", "Self_GroupReferenceDensity", "WordCount")
  ToneData[] <- lapply(ToneData, as.character)
  ToneData[] <- lapply(ToneData, as.numeric)
  AllData <- cbind(AllData, ToneData)
  
  #dates <- data.frame(parse_gkg_mentioned_dates(AllData))
  locations <- data.frame(parse_gkg_mentioned_locations(AllData))
  # names <- data.frame(parse_gkg_mentioned_names(AllData))
  organizations <- data.frame(parse_gkg_mentioned_organizations(AllData))
  #people <- data.frame(parse_gkg_mentioned_people(AllData))
  
  AllData <- left_join(AllData, locations, by = "idGKG")
  AllData <- left_join(AllData, names, by = "idGKG")
  AllData <- left_join(AllData, organizations, by = "idGKG")
  
  EgyptDataExpanded <<- AllData
  
  if(writeResults==T){
    FolderForResults <- choose.dir(caption = "Select where to store Egypt specific GDELT Results")
    fwrite(EgyptDataExpanded, file = paste(FolderForResults, "/EgyptExpandedDataDate", dates, ".csv", sep = ""))
  }
}


parse_gkg_mentioned_names<-function (gdelt_data, filter_na = T, return_wide = T) {
  parse_mentioned_names_counts <- function(field = "Interior Minister Chaudhry Nisar Ali Khan,47;Mullah Mansour,87;Afghan Taliban,180;Mullah Mansour,382;Mullah Mansor,753;Mullah Mansour,815;Mullah Mansour,1025", 
                                           return_wide = return_wide) {
    options(scipen = 99999)
    if (field %>% is.na()|field=="") {
      if (return_wide) {
        field_data <- data_frame(nameMentionedName1 = NA, 
                                 charLoc1 = NA)
      }
      else {
        field_data <- data_frame(nameMentionedName = NA, 
                                 charLoc = NA, idArticleMentionedName = 1)
      }
    }
    else {
      fields <- field %>% str_split("\\;") %>% flatten_chr() %>% 
        .[!. %in% ""]
      fields_df <- data_frame(field = fields) %>% dplyr::mutate(idArticleMentionedName = 1:n()) %>% 
        separate(field, into = c("nameMentionedName", 
                                 "charLoc"), sep = "\\,") %>% mutate(charLoc = charLoc %>% 
                                                                       as.numeric()) %>% suppressMessages() %>% suppressWarnings()
      if (return_wide) {
        fields_df <- fields_df %>% gather(item, value, 
                                          -c(idArticleMentionedName, charLoc)) %>% arrange(idArticleMentionedName) %>% 
          unite(item, item, idArticleMentionedName, sep = "")
        order_fields <- fields_df$item
        field_data <- fields_df %>% dplyr::select(-matches("charLoc")) %>% 
          spread(item, value) %>% dplyr::select_(.dots = order_fields)
        field_data <- field_data %>% mutate_at(field_data %>% 
                                                 dplyr::select(matches("charLoc")) %>% names(), 
                                               funs(. %>% as.character() %>% readr::parse_number()))
      }
      else {
        field_data <- fields_df
        field_data <- field_data %>% dplyr::select(idArticleMentionedName, 
                                                   charLoc, nameMentionedName)
      }
    }
    return(field_data)
  }
  if (!"mentionedNamesCounts" %in% names(gdelt_data)) {
    stop("Sorry missing metioned name column")
  }
  counts_data <- gdelt_data %>% dplyr::select(idGKG, mentionedNamesCounts)
  all_counts <- 1:length(counts_data$mentionedNamesCounts) %>% 
    purrr::map_df(function(x) {
      parse_mentioned_names_counts(field = counts_data$mentionedNamesCounts[x], 
                                   return_wide = F) %>% dplyr::mutate(idGKG = counts_data$idGKG[x])
    }) %>% dplyr::select(idGKG, everything())
  if (filter_na) {
    if ("nameMentionedName" %in% names(all_counts)) {
      all_counts <- all_counts %>% dplyr::filter(!nameMentionedName %>% 
                                                   is.na())
    }
  }
  all_counts <- all_counts %>% gdeltr2::get_clean_count_data(count_col = "idArticleMentionedName", 
                                                    return_wide = F) %>% separate(idGKG, into = c("GKG", 
                                                                                                  "dateTime"), sep = "\\-", remove = F) %>% mutate(dateTime = dateTime %>% 
                                                                                                                                                     as.numeric()) %>% select(-matches("charLoc")) %>% arrange(dateTime) %>% 
    dplyr::select(-c(dateTime, GKG)) %>% suppressWarnings()
  if (return_wide) {
    all_counts <- all_counts %>% spread(item, value)
  }
  if (!return_wide) {
    all_counts <- all_counts %>% .resolve_long_names()
  }
  return(all_counts)
}
ExpandEgypt
