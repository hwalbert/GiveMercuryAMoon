#' @title A function compare Debits & Credits in DEAMS data
#'
#' @description This function breaks transactions in Budgetary, Memo, & Proprietary transactions.
#' It also compares debits and credits for these different types of transactions
#'
#' @param MasterFile A dataframe created by the CleanDEAMSFile function that includes a 55th column for TCodes.
#' @param OldFormat Defaults to False.  When true it will analyze the old format (46 columns DEAMS dataset)
#' @return Returns a data frame to the global environment showing the debit/credit results.
#' @examples DebitCreditCompare(MasterFile)

DebitCreditCompare <- function(MasterFile, OldFormat = FALSE) {
  GLAC4000 <- filter(MasterFile, substr(GLAC, 1,1) == "4") #Budgetary GLACs
  GLAC9000 <- filter(MasterFile, substr(GLAC, 1,1) == "9") #Memo Acct GLACs
  GLACAllOthers <- filter(MasterFile, substr(GLAC, 1,1) != "4" & substr(GLAC, 1,1) != "9") #Proprietary GLACs
  DCTable <- DCTable
  DCTable$GLAC <- as.character(DCTable$GLAC)
  Levels <- c("All GLACs", "Budgetary", "Memo", "Proprietary")

  if (!OldFormat) {
    Debits <- c(sum(MasterFile$Debit.Amount), sum(GLAC4000$Debit.Amount), sum(GLAC9000$Debit.Amount), sum(GLACAllOthers$Debit.Amount))
    Credits <- c(sum(MasterFile$Credit.Amount), sum(GLAC4000$Credit.Amount), sum(GLAC9000$Credit.Amount), sum(GLACAllOthers$Credit.Amount))
    Debit_Credit_Results <- as.data.frame(cbind(Debits, Credits))
    Debit_Credit_Results <- cbind(Debit_Credit_Results, Levels)
    # Debit_Credit_Results$Debits <- as.numeric(paste(Debit_Credit_Results$Debits))
    # Debit_Credit_Results$Credits <- as.numeric(paste(Debit_Credit_Results$Credits))
    Debit_Credit_Results <<- mutate(Debit_Credit_Results, Difference = Debits - Credits)

    SumDebitsCreditsByGLAC <- summarise(group_by(MasterFile, GLAC), sum(Debit.Amount), sum(Credit.Amount))
    SumDebitsCreditsByGLAC <- left_join(SumDebitsCreditsByGLAC, DCTable, by = "GLAC")
    SumDebitsCreditsByGLAC[,5] <- NULL
    names(SumDebitsCreditsByGLAC) <- c("GLAC", "Debit.Amount", "Credit.Amount", "Normal.Account.Balance")
    SumDebitsCreditsByGLAC <- mutate(SumDebitsCreditsByGLAC, Dollars = Debit.Amount - Credit.Amount)

  } else if (OldFormat) {
    Debits <- c(sum(MasterFile$Credit.Amount), sum(GLAC4000$Credit.Amount), sum(GLAC9000$Credit.Amount), sum(GLACAllOthers$Credit.Amount))
    Credits <- c(sum(MasterFile$Transaction.Post.Date), sum(GLAC4000$Transaction.Post.Date), sum(GLAC9000$Transaction.Post.Date), sum(GLACAllOthers$Transaction.Post.Date))
    Debit_Credit_Results <- as.data.frame(cbind(Debits, Credits))
    Debit_Credit_Results <- cbind(Debit_Credit_Results, Levels)
    # Debit_Credit_Results$Debits <- as.numeric(paste(Debit_Credit_Results$Debits))
    # Debit_Credit_Results$Credits <- as.numeric(paste(Debit_Credit_Results$Credits))
    Debit_Credit_Results <- mutate(Debit_Credit_Results, Difference = Debits - Credits)

    SumDebitsCreditsByGLAC <- summarise(group_by(MasterFile, GLAC), sum(Credit.Amount), sum(Transaction.Post.Date))
    SumDebitsCreditsByGLAC <- left_join(SumDebitsCreditsByGLAC, DCTable, by = "GLAC")
    SumDebitsCreditsByGLAC[,5] <- NULL
    names(SumDebitsCreditsByGLAC) <- c("GLAC", "Credit.Amount", "Transaction.Post.Date", "Normal.Account.Balance")
    SumDebitsCreditsByGLAC <- mutate(SumDebitsCreditsByGLAC, Dollars = Credit.Amount - Transaction.Post.Date)

  }
  # BPMplot <- pie(abs(Debit_Credit_Results$Difference[2:4]), labels = Debit_Credit_Results$Levels[2:4],
  #     main = "Budgetary/Proprietary GLAC Breakdown")
  # BPMplot <<- BPMplot

  # GLACDCplot <<- pie(abs(SumDebitsCreditsByGLAC$Dollars), labels = SumDebitsCreditsByGLAC$GLAC,
  #              main = "Detailed GLAC Debit/Credit Breakdown")
  SumDebitsCreditsByGLAC <<- data.frame(SumDebitsCreditsByGLAC)
}
